== 0.0.5

* URLs for both servers and rooms are now defined with a string attribute (called "param") instead of the model ID.
* New return values for bigbluebutton_role: :password and nil.
* Private rooms now require a password to be valid.
* New action "join_mobile" for rooms that renders a QR code to join the conference using the protocol "bigbluebutton://".
* New action "activity" for servers that shows a view to monitors a BBB server.
* Added json responses for most of the actions.
* logout_url can be an incomplete url and it will be completed with the current domain/protocol when a room is created in the BBB server.
* The generator bigbluebutton_rails:public was removed. It's features are now inside bigbluebutton_rails:install.
* After fetch_meetings all rooms are automatically stored in the DB if they are not there yet.

== 0.0.4

* A random voice_bridge with 5 digits (recommended) is set when a room is created.
* Routes generators now allow specifying custom controllers instead of the defaults Bigbluebutton::ServersController and Bigbluebutton::RoomsController.
* Some bug fixes (including fixes for ruby 1.8).

== 0.0.3

* Rooms can be public or private
* New route RoomsController#invite used to request a password to join a room or to allow anonymous users to join.
* Room's "meeting_id" attribute renamed to "meetingid".
* A room can have it's meetingid randomly generated for each "send_create" call if randomize_meetingid is set.
* New attributes for rooms: logout_url, dial_number, voice_bridge and max_participant.

== 0.0.2

* New "fetch" and "send" methods in BigbluebuttonRooms to fetch info about meetings from BBB and store in the model.
* New class BigbluebuttonAttendee to store attendee information returned by BBB in get_meeting_info.
* New class BigbluebuttonMeeting to store meeting information returned by BBB in get_meetings.

== 0.0.1

* First version
* DB models for BigBlueButton servers and rooms
* Controller to access servers and rooms
* rooms_controller interacts with a BBB server using bigbluebutton-api-ruby
